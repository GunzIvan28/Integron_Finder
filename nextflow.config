params.cpu = 1


manifest {
  homePage = 'https://github.com/gem-pasteur/Integron_Finder'
  description = 'Workflow to run integron_finder on large dataset.'
  mainScript = 'parallel_integron_finder.nf'
  defaultBranch = 'dev'
  nextflowVersion = '>=0.29'
}

profiles {
    standard {
        executor {
            name = 'local'
            queueSize = 4
        }
        process {
            withName: integron_finder {
                cpus = params.cpu
            }
        }
    }

    standard_singularity {
        executor {
            name = 'local'
            queueSize = 4
        }
        process {
            container = 'shub://gem-pasteur/Integron_Finder:2.0rc2'
            withName: integron_finder {
                cpus = params.cpu
            }
        }
        singularity {
            enabled = true
       }
    }

    cluster {
        executor {
            name = 'slurm'
            queueSize = 500
        }

        process {
            queue = 'common,dedicated'
            clusterOptions = '--qos=fast'
            withName: integron_finder {
                cpus = params.cpu
            }
        }
    }

    cluster_singularity {
        executor {
            name = 'slurm'
            queueSize = 500
        }

        process {
            container = 'shub://gem-pasteur/Integron_Finder:2.0rc2'
            queue = 'common,dedicated'
            clusterOptions = '--qos=fast'
            withName: integron_finder {
                cpus = params.cpu
            }
        }
        singularity {
            enabled = true
            runOptions = '-B /pasteur'
            autoMounts = false
       }
    }
}

if (! params.replicons){
    throw new Exception("The option '--replicons' is mandatory.")
}

params.out = false
replicon_file = new File(params.replicons)
res_dir_suffix = params.out ? params.out : replicon_file.name.split("\\.", 2)[0]
result_dir = "Results_Integron_Finder_${res_dir_suffix}"

trace {
	enabled = true
	file = "${result_dir}/integron_trace.txt"
}

timeline {
	enabled = true
	file = "${result_dir}/integron_timeline.html"
}

report {
    enabled = true
    file = "${result_dir}/integron_report.html"
}
